plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id "de.mannodermaus.android-junit5" version "1.8.2.1"
}

android {
    namespace 'nl.yoerivanhoek.rijksdemo'
    compileSdk 33

    defaultConfig {
        applicationId "nl.yoerivanhoek.rijksdemo"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        String apiKey = readApiKeyFromLocalProperties()
        buildConfigField "String", "API_KEY", "\"$apiKey\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

private String readApiKeyFromLocalProperties() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    def apiKey = properties.getProperty("API_KEY")
    if (apiKey == null) {
        throw new Exception("Please add the Rijks API_KEY to your local.properties")
    }
    return apiKey
}

dependencies {

    def composeVersion = "1.2.1"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.compose.foundation:foundation:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.0'
    implementation 'io.coil-kt:coil-compose:2.0.0-rc01'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    implementation "androidx.paging:paging-common-ktx:3.1.1"
    implementation "androidx.paging:paging-compose:1.0.0-alpha16"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Koin
    def koinVersion = "3.2.2"
    implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "io.insert-koin:koin-androidx-compose:$koinVersion"
    implementation "androidx.navigation:navigation-compose:2.5.3"

    def chuckerVersion = "3.5.2"

    debugImplementation "com.github.chuckerteam.chucker:library:$chuckerVersion"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chuckerVersion"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.2.1"

    def junitVersion = '5.8.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    testImplementation 'androidx.paging:paging-runtime-ktx:3.1.1'
    testImplementation "app.cash.turbine:turbine:0.6.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.2.1"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"

    def mockitoVersion = "4.2.0"
    def mockitoKotlinVersion = "4.0.0"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
}